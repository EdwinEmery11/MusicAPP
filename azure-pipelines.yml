# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- filefix
pool:
  name: my-new-pool
stages:
  - stage: build
    displayName: 'master-branch-build'

    #build jobs
    jobs: 
      - job: build

        variables:
          buildConfiguration: 'Release'

        steps:
        - task: DotNetCoreCLI@2
          inputs:
            command: 'restore'
            projects: '**/*.csproj'
            feedsToUse: 'select'
        - task: DotNetCoreCLI@2
          inputs:
            command: 'build'
            projects: '**/*.csproj'
            arguments: 'dotnet build --configuration $(BuildConfiguration)'
        - task: DotNetCoreCLI@2
          inputs:
            command: 'publish'
            publishWebProjects: true
            arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(build.artifactstagingdirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'
        - task: AzureRmWebAppDeployment@4
          inputs:
            ConnectionType: 'AzureRM'
            azureSubscription: 'Avanade Delivery(3eba6e29-3983-495b-a539-c3c4b43fb90c)'
            appType: 'webAppLinux'
            WebAppName: 'Edwine-musicwebapp'
            packageForLinux: '$(System.DefaultWorkingDirectory)'
            RuntimeStack: 'DOTNETCORE|5.0'
